import React, { useEffect } from 'react';
import Head from 'next/head';
import BottomNavigation from '@mui/material/BottomNavigation';
import BottomNavigationAction from '@mui/material/BottomNavigationAction';
import { Book, CalendarToday, Medication, Settings } from '@mui/icons-material';
import Calendar from '../components/calendar/Calendar';
import Dosages from '../components/dosages/Dosages';
import Binders from '../components/binders/Binders';
import useGetBinders from '../hooks/api/useGetBinders';

const Dashboard = () => {

  const [value, setValue] = React.useState('calendar');

  const postTest = useGetBinders()


  const handleChange = async (event: React.SyntheticEvent, newValue: string) => {
    //@ts-ignore
    postTest.refetch().then(response=>response.data.json()).then((data)=>console.log(data))

    // const response = await fetch('http://localhost:3002/graphql', {
    //   method: 'POST', // *GET, POST, PUT, DELsETE, etc.
    //   mode: 'cors', // no-cors, *cors, same-origin
    //   cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
    //   credentials: 'same-origin', // include, *same-origin, omit
    //   headers: {
    //     'Content-Type': 'application/json',
    //   },
    //   body: JSON.stringify({
    //     query: `
    //     query Query($accountQueryAccountId: Int!) {
    //         account_query(account_id: $accountQueryAccountId) {
    //         users {
    //           name
    //          }
    //     }
    //   }
    //   `,
    //     variables: {
    //       accountQueryAccountId: 1,
    //     },
    //   })
    // })
    //
    // const data = await response.json()
    //
    // console.log(data)

    setValue(newValue);
  };

  useEffect(() => {
    console.log(postTest)
  }, [postTest]);


  return (
    <div>
      <Head>
        <title>Red-Binder | Dashboard</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <div style={{ display: value !== 'calendar' ? 'none' : 'inherit' }}>
        <Calendar />
      </div>
      <div style={{ display: value !== 'dosages' ? 'none' : 'inherit' }}>
        <Dosages />
      </div>
      <div style={{ display: value !== 'binders' ? 'none' : 'inherit' }}>
        <Binders />
      </div>

      <div style={{ position: 'fixed', bottom: 0, left: 0, right: 0 }}>
        <BottomNavigation value={value} onChange={handleChange}>
          <BottomNavigationAction
            label='Calendar'
            value='calendar'
            icon={<CalendarToday />}
          />
          <BottomNavigationAction
            label='Dosages'
            value='dosages'
            icon={<Medication />}
          />
          <BottomNavigationAction
            label='Binders'
            value='binders'
            icon={<Book />}
          />
        </BottomNavigation>
      </div>
    </div>
  );
};

export default Dashboard;
